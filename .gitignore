# This file contains .gitignore rules that are often used with Composer-based
# WordPress projects. Because .gitignore is specific to your site and its
# deployment processes, you may need to uncomment, add, or remove rules.

wp-content/uploads/*
!wp-content/uploads/.gitkeep
wp-content/cache/*

# Logfiles should always be ignored.
*.log

# Environment (.env) files should be ignored as they are generally personal.
# However, the .env.example and .env.pantheon files are left so that they can be
# viewed and modified. You should not store any credentials in your
# .env.pantheon file. Instead, those can go into environment-specific .env
# files. Constants saved in .env files will override those constants that are
# defined in wp-config-pantheon.php.
.env
.env.*
!.env.example
!.env.pantheon

# Generally you should only ignore the root vendor directory. These files are
# managed by Composer and should not be version controlled. It may be necessary
# to explicitly allow /vendor directories within plugins or themes that are not
# available through Wpackagist (which mirrors WordPress.org), like projects
# that pull from Packagist or custom GitHub repositories.
/vendor

# Any local WP-CLI rules should not be version controlled.
wp-cli.local.yml

# :::::::::::::::::::::: Pantheon Additions ::::::::::::::::::::::

# Must-use plugins
# Ignore packages uploaded to mu-plugins by default. These area typically
# managed by composer as wordpress-muplugins. If you have custom mu-plugins,
# you will need to explicitly exclude them from this rule like this:
# !wp-content/mu-plugins/my-muplugin/
# By default, individual mu-plugin files are not ignored, so any bare file in
# mu-plugins is version controlled. Exceptions to this rule are made to specific
# files managed by Composer.
wp-content/mu-plugins/*/

# Plugins
# Ignore the plugins directory by default. WordPress plugins should be managed
# by Composer, where we have more control over the version constraints of the
# plugins. If you have custom plugins, you will need to explicitly exclude them
# from this rule like this:
# !wp-content/plugins/my-plugin
wp-content/plugins/*
!wp-content/plugins/.gitkeep

# Themes
# We don't ignore all themes by default as these are most commonly where a
# bulk of a site's custom code may be. However, we do ignore all of the
# twenty-* themes by default. Any other Composer-managed themes should be
# added to this list.
wp-content/themes/twenty*

# Other WordPress files and directories
# Any other files or directories that should not be version controlled go here.
# A lot of stuff from the non-Composer-managed WordPress upstream is repeated
# here.
wp-content/backups/
wp-content/backupwordpress-*/
wp-content/blogs.dir/
wp-content/backup-db/
wp-content/managewp/backups/
wp-content/updraft/
wp-content/upgrade/
wp-content/advanced-cache.php
wp-content/wp-cache-config.php
wp-content/object-cache.php
wp-config-local.php
sitemap.xml
sitemap.xml.gz

# Private files
# We want to ignore files inside web/private/ by default, but we don't want to
# ignore the entire directory. The web/private/config directory is excluded from
# this rule because this may contain information that should be shared across
# environments and is not considered sensitive data. However, that exclusion
# should be removed if that is not the case.
!private/
private/*
!private/config/



# Files
# Common files that should not be version controlled.
# Packages #
############
*.7z
*.dmg
*.gz
*.bz2
*.iso
*.jar
*.rar
*.tar
*.zip
*.tgz
!web/wp/wp-includes/**/*.gz

# Logs and databases #
######################
*.log
*.sql

# OS generated files #
######################
.DS_Store*
ehthumbs.db
Thumbs.db
._*

# Vim generated files #
######################
*.un~

# SASS #
##########
.sass-cache
